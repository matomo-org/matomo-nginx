upstream _php {
    server unix:/var/run/php/php8.2-fpm.sock; #replace with the path to your PHP socket file
    #fastcgi_pass 127.0.0.1:9000; # uncomment if you are using PHP via TCP sockets (e.g. Docker container)
}

server {
    listen [::]:80; # remove this if you don't want Matomo to be reachable from IPv6
    listen 80;
    server_name matomo.example.com;
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
    listen [::]:443 ssl http2; # remove this if you don't want Matomo to be reachable from IPv6
    listen 443 ssl http2;
    server_name matomo.example.com; # list all domains Matomo should be reachable from
    access_log /var/log/nginx/matomo.access.log;
    error_log /var/log/nginx/matomo.error.log;

    ## uncomment if you want to enable HSTS with 6 months cache
    ## ATTENTION: Be sure you know the implications of this change (you won't be able to disable HTTPS anymore)
    #add_header Strict-Transport-Security max-age=15768000 always;

    ## replace with your SSL certificate
    ssl_certificate /etc/letsencrypt/live/matomo.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/matomo.example.com/privkey.pem;

    include ssl.conf; # if you want to support older browsers, please read through this file

    ## Only allow full site-access from trusted sources
    # allow from 192.0.2.1;
    # allow from 233.252.0.0/24;
    # deny all;

    add_header Referrer-Policy origin always; # make sure outgoing links don't show the URL to the Matomo instance
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    root /var/www/matomo/; # replace with path to your matomo instance

    index index.php;

    ## Deny everything that doesn't match another location
    location / {
        deny all;
        return 404;
    }
    ## Need to allow GET / to internally redirect to /index.php
    location = / { }

    location = /robots.txt {}

    ## Only allow public access to the following php files
    location ~ ^/(matomo|piwik)\.php$ {
        include snippets/fastcgi-php.conf;  # if your Nginx setup doesn't come with a default fastcgi-php config, you can fetch it from https://github.com/nginx/nginx/blob/master/conf/fastcgi.conf
        fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/
        fastcgi_pass _php; # Refers to the upstream block above
        allow all; # This ensures public access
    }

    ## Only allow access to the following php files
    location ~ ^/(index|js/index)\.php$ {
        include snippets/fastcgi-php.conf;  # if your Nginx setup doesn't come with a default fastcgi-php config, you can fetch it from https://github.com/nginx/nginx/blob/master/conf/fastcgi.conf
        fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/
        fastcgi_pass _php; # Refers to the upstream block above
    }

    ## Uncomment bellow block(s) if needed

    # location ~ ^/(plugins/HeatmapSessionRecording/configs)\.php$ {
    #     include snippets/fastcgi-php.conf;  # if your Nginx setup doesn't come with a default fastcgi-php config, you can fetch it from https://github.com/nginx/nginx/blob/master/conf/fastcgi.conf
    #     fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/
    #     fastcgi_pass _php; # Refers to the upstream block above
    # }

    # location ~ js/container_.*_preview\.js$ {
    #     expires off;
    #     add_header Cache-Control 'private, no-cache, no-store';
    # }

    ## Static files
    location ~ \.(gif|ico|jpg|png|svg|js|css|htm|html|mp3|mp4|wav|ogg|avi|ttf|eot|woff|woff2)$ {
        ## Cache images,CSS,JS and webfonts for an hour
        ## Increasing the duration may improve the load-time, but may cause old files to show after an Matomo upgrade
        expires 1h;
        add_header Pragma public;
        add_header Cache-Control "public";

        # These are always public
        location ~ ^/(matomo|piwik)\.js$ {
            allow all;
        }

    }
}
# vim: filetype=nginx
